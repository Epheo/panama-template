#!/bin/bash

echo "Updating conf file..."
configparse.py

export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=${ADMIN_PASS}
export OS_AUTH_URL=http://${KEYSTONE_HOST_IP}:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

endpoint=`openstack endpoint list -f csv -q |grep heat`

if [ -z "$endpoint" ]
then
    echo ">>>>>>> Endpoint not yet created"
    echo "Creating database"
    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "CREATE DATABASE heat;"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'localhost' \
            IDENTIFIED BY '${HEAT_DBPASS}';"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON heat.* TO 'heat'@'%' \
            IDENTIFIED BY '${HEAT_DBPASS}'"


    echo "Creating heat user..."
    openstack user create --domain default --password ${HEAT_PASS} heat

    openstack role add --project service --user heat admin

    echo "Registering heat API and EndPoints..."
    openstack service create --name heat \
        --description "OpenStack Orchestration" orchestration

    openstack service create --name heat-cfn \
    --description "OpenStack Orchestration" cloudformation


    openstack endpoint create --region RegionOne \
        orchestration public http://${KEYSTONE_HOST_IP}:8004/v1/%\(tenant_id\)s

    openstack endpoint create --region RegionOne \
        orchestration internal http://${KEYSTONE_HOST_IP}:8004/v1/%\(tenant_id\)s

    openstack endpoint create --region RegionOne \
        orchestration admin http://${KEYSTONE_HOST_IP}:8004/v1/%\(tenant_id\)s


    openstack endpoint create --region RegionOne \
        cloudformation public http://${KEYSTONE_HOST_IP}:8000/v1

    openstack endpoint create --region RegionOne \
        cloudformation internal http://${KEYSTONE_HOST_IP}:8000/v1

    openstack endpoint create --region RegionOne \
        cloudformation admin http://${KEYSTONE_HOST_IP}:8000/v1


    openstack domain create --description "Stack projects and users" heat
    openstack user create --domain heat --password ${HEAT_PASS} heat_domain_admin
    openstack role add --domain heat --user-domain heat --user heat_domain_admin admin
    openstack role create heat_stack_owner
    openstack role add --project demo --user demo heat_stack_owner
    openstack role create heat_stack_user

else

    if [[ $endpoint == *"ERROR"* ]]
    then
        echo ">>>>>>> Cannot connect to Keystone"
        exit
    else
        echo ">>>>>>> Endpoint already created"
    fi
fi

echo "Create database tables"
heat-manage db_sync

echo "Starting heat using supervisord..."
exec /usr/bin/supervisord -n
