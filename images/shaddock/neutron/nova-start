#!/bin/bash

echo "Removing neutron DB..."
rm /var/lib/neutron/neutron.sqlite

echo "Updating conf file..."
configparse.py

export OS_USERNAME=admin
export OS_PASSWORD=${ADMIN_PASS} 
export OS_TENANT_NAME=admin
export OS_AUTH_URL=http://${KEYSTONE_HOST_IP}:35357/v2.0

endpoint=`openstack endpoint list -f csv -q |grep neutron`

if [ -z "$endpoint" ]
then
    echo ">>>>>>> Endpoint not created"
    echo "Creating database"
    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "CREATE DATABASE neutron;"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
            IDENTIFIED BY '${NEUTRON_DBPASS}';"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
            IDENTIFIED BY '${NEUTRON_DBPASS}';"
    
    echo "Creating Neutron user..."
    openstack user create --password ${NEUTRON_PASS} neutron
    
    openstack role add --project service --user neutron admin
    
    echo "Registering Neutron API and EndPoints..."
    openstack service create --type compute \
        --description "OpenStack Compute" neutron

    openstack endpoint create \
        --publicurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --internalurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --adminurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --region RegionOne \
        compute

    echo "Testing Neutron..."
    neutron service-list
    neutron endpoints

else

    if [[ $endpoint == *"ERROR"* ]]
    then
        echo ">>>>>>> Cannot connect to Keystone"
        exit
    else
        echo ">>>>>>> Endpoint already created"
        echo "Testing Neutron..."
        neutron service-list
        neutron endpoints
        neutron image-list
    fi
fi

echo "Updating database tables"
neutron-manage db sync

echo "Starting neutron using supervisord..."
exec /usr/bin/supervisord -n
