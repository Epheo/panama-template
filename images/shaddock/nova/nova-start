#!/bin/bash

echo "Removing nova DB..."
rm /var/lib/nova/nova.sqlite

echo "Updating conf file..."
configparse.py

export OS_USERNAME=admin
export OS_PASSWORD=${ADMIN_PASS} 
export OS_TENANT_NAME=admin
export OS_AUTH_URL=http://${KEYSTONE_HOST_IP}:35357/v2.0

endpoint=`openstack endpoint list -f csv -q |grep nova`

if [ -z "$endpoint" ]
then
    echo ">>>>>>> Endpoint not created"
    echo "Creating database nova"
    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "CREATE DATABASE nova;"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
            IDENTIFIED BY '${NOVA_DBPASS}';"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
            IDENTIFIED BY '${NOVA_DBPASS}';"

    echo "Creating database nova_api"
    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "CREATE DATABASE nova_api;"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
            IDENTIFIED BY '${NOVA_DBPASS}';"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
            IDENTIFIED BY '${NOVA_DBPASS}';"

    echo "Creating Nova user..."
    openstack user create --password ${NOVA_PASS} nova

    openstack role add --project service --user nova admin

    echo "Registering Nova API and EndPoints..."
    openstack service create --name nova \
        --description "OpenStack Compute" compute

    openstack endpoint create \
        --publicurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --internalurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --adminurl http://${KEYSTONE_HOST_IP}:8774/v2/%\(tenant_id\)s \
        --region RegionOne \
        compute

    echo "Testing Nova..."
    openstack compute service list
    openstack endpoint list

else

    if [[ $endpoint == *"ERROR"* ]]
    then
        echo ">>>>>>> Cannot connect to Keystone"
        exit
    else
        echo ">>>>>>> Endpoint already created"
        echo "Testing Nova..."
        openstack compute service list
        openstack endpoint list
    fi
fi

echo "Create databases tables"
nova-manage api_db sync
nova-manage db sync

echo "Starting nova using supervisord..."
exec /usr/bin/supervisord -n
