#!/bin/bash

echo "Removing ceilometer DB..."
rm /var/lib/ceilometer/ceilometer.sqlite

echo "Updating conf file..."
configparse.py

export OS_USERNAME=admin
export OS_PASSWORD=${ADMIN_PASS}
export OS_TENANT_NAME=admin
export OS_AUTH_URL=http://${KEYSTONE_HOST_IP}:35357/v2.0

endpoint=`openstack endpoint list -f csv -q |grep ceilometer`

if [ -z "$endpoint" ]
then
    echo ">>>>>>> Endpoint not yet created"
    echo "Creating database"

    mongo --host ${MONGODB_HOST_IP} --eval '
      db = db.getSiblingDB("ceilometer");
      db.addUser({user: "ceilometer",
      pwd: ${CEILOMETER_DBPASS},
      roles: [ "readWrite", "dbAdmin" ]})'


    echo "Creating Ceilometer user..."
    openstack user create --password ${CEILOMETER_PASS} ceilometer

    openstack role add --project service --user ceilometer admin

    echo "Registering Ceilometer API and EndPoints..."
    openstack service create --type metering \
        --description "Telemetry" ceilometer

    openstack endpoint create \
        --publicurl http://${KEYSTONE_HOST_IP}:8777 \
        --internalurl http://${KEYSTONE_HOST_IP}:8777 \
        --adminurl http://${KEYSTONE_HOST_IP}:8777 \
        --region RegionOne \
        metering

else

    if [[ $endpoint == *"ERROR"* ]]
    then
        echo ">>>>>>> Cannot connect to Keystone"
        exit
    else
        echo ">>>>>>> Endpoint already created"
    fi
fi

echo "Updating database tables"
ceilometer-manage db sync

echo "Starting ceilometer using supervisord..."
exec /usr/bin/supervisord -n
