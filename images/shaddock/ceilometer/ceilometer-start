#!/bin/bash

echo "Removing ceilometer DB..."
rm /var/lib/ceilometer/ceilometer.sqlite

echo "Updating conf file..."
configparse.py

export OS_USERNAME=admin
export OS_PASSWORD=${ADMIN_PASS}
export OS_TENANT_NAME=admin
export OS_AUTH_URL=http://${KEYSTONE_HOST_IP}:35357/v2.0

endpoint=`openstack endpoint list -f csv -q |grep ceilometer`

if [ -z "$endpoint" ]
then
    echo ">>>>>>> Endpoint not yet created"
    echo "Creating database"
    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "CREATE DATABASE ceilometer;"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'localhost' \
            IDENTIFIED BY '${CEILOMETER_DBPASS}';"

    mysql \
        -h${MYSQL_HOST_IP} \
        -u${MYSQL_USER} \
        -p${MYSQL_PASSWORD} \
        -e "GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'%' \
            IDENTIFIED BY '${CEILOMETER_DBPASS}'"


    echo "Creating Ceilometer user..."
    openstack user create --password ${CEILOMETER_PASS} ceilometer

    openstack role add --project service --user ceilometer admin

    echo "Registering Ceilometer API and EndPoints..."
    openstack service create --type image \
        --description "OpenStack Block Storage" ceilometer

    openstack service create --type volumev2 \
        --description "OpenStack Block Storage" ceilometerv2

    openstack endpoint create \
          --publicurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --internalurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --adminurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --region RegionOne \
          volume

      openstack endpoint create \
          --publicurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --internalurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --adminurl http://${KEYSTONE_HOST_IP}:8776/v2/%\(tenant_id\)s \
          --region RegionOne \
          volumev2

else

    if [[ $endpoint == *"ERROR"* ]]
    then
        echo ">>>>>>> Cannot connect to Keystone"
        exit
    else
        echo ">>>>>>> Endpoint already created"
    fi
fi

echo "Create database tables"
ceilometer-manage db sync

echo "Starting ceilometer using supervisord..."
exec /usr/bin/supervisord -n
